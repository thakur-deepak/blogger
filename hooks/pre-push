#!/usr/bin/env bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

<?php
$projectName = basename(getcwd()); // get the name of your app
echo PHP_EOL;
echo '+ Starting unit tests'.PHP_EOL;
exec('vendor/bin/phpunit', $output, $returnCode); // command to run tests with any testing framework you like
if ($returnCode !== 0) {
  $testSummary = $output;
  printf("%s Test Summary: ", $projectName);
  echo PHP_EOL;
  printf("( %s ) %s%2\$s", $testSummary[14], PHP_EOL);
  printf("ABORTING COMMIT!\n");
  exit(1); // git halts
}
exit(0); // git continues with push event